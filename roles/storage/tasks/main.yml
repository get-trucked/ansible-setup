---
# - name: mount nfs share
#   vars:
#     mynfs: "{{ nas_host }}:{{ nfs_host_cameras_mount }}"
#     mountpoint: "{{ nfs_client_cameras_mount }}"
#     permission: '0777'
#     myopts: 'rw,sync'

#### TODO convert the vars to defaults

- name: utility present redhat-like
  ansible.builtin.yum:
    name:
      - nfs-utils
      - nfs4-acl-tools
    state: present
  when: ansible_os_family == 'RedHat'

- name: utility present debian-like
  ansible.builtin.apt:
    name:
      - nfs-common
      - nfs4-acl-tools
    state: present
  when: ansible_os_family == 'Debian'

- name: check mountpoint exist
  ansible.builtin.file:
    path: "{{ nfs_client_cameras_mount }}"
    state: directory
    mode: '0777'
    owner: root
    group: root

- name: mount network share
  ansible.posix.mount:
    src: "{{ nas_host }}:{{ nfs_host_cameras_mount }}"
    path: "{{ nfs_client_cameras_mount }}"
    fstype: nfs
    opts: 'rw,sync'
    state: mounted

- name: check mountpoint exist
  ansible.builtin.file:
    path: "{{ nfs_client_backup_mount }}"
    state: directory
    mode: '0777'
    owner: root
    group: root

- name: mount network share
  ansible.posix.mount:
    src: "{{ nas_host }}:{{ nfs_host_backup_mount }}"
    path: "{{ nfs_client_backup_mount }}"
    fstype: nfs
    opts: 'rw,sync'
    state: mounted

